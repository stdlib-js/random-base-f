// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-chisquare@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";var f=u.isPrimitive;var g=function(e,t){return f(e)?f(t)?null:new TypeError("invalid argument. `d2` must be a positive number. Value: `"+t+"`."):new TypeError("invalid argument. `d1` must be a positive number. Value: `"+e+"`.")};var h=function(e,t,n){return e(t)/t/(e(n)/n)},j=e,c=t,b=n,v=r,y=s,x=i,w=o,L=d,N=m.factory,E=a,O=l,T=p,P=g,V=h;var G=function(){var e,t,n,r,s,i,o;if(0===arguments.length)e=N();else if(1===arguments.length){if(!v(t=arguments[0]))throw new TypeError(T("invalid argument. Options argument must be an object. Value: `%s`.",t));if(x(t,"prng")){if(!y(t.prng))throw new TypeError(T("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=N({prng:t.prng})}else e=N(t)}else{if(s=P(i=arguments[0],o=arguments[1]))throw s;if(arguments.length>2){if(!v(t=arguments[2]))throw new TypeError(T("invalid argument. Options argument must be an object. Value: `%s`.",t));if(x(t,"prng")){if(!y(t.prng))throw new TypeError(T("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=N({prng:t.prng})}else e=N(t)}else e=N()}return r=void 0===i?h:g,n=e.PRNG,j(r,"NAME","f"),t&&t.prng?(j(r,"seed",null),j(r,"seedLength",null),b(r,"state",w(null),L),j(r,"stateLength",null),j(r,"byteLength",null),j(r,"toJSON",w(null))):(c(r,"seed",d),c(r,"seedLength",m),b(r,"state",p,u),c(r,"stateLength",a),c(r,"byteLength",l),j(r,"toJSON",f)),j(r,"PRNG",n),r;function d(){return n.seed}function m(){return n.seedLength}function a(){return n.stateLength}function l(){return n.byteLength}function p(){return n.state}function u(e){n.state=e}function f(){var e={type:"PRNG"};return e.name=r.NAME,e.state=O(n.state),e.params=void 0===i?[]:[i,o],e}function g(){return V(e,i,o)}function h(t,n){return E(t)||E(n)||t<=0||n<=0?NaN:V(e,t,n)}},R=G(),A=G;e(R,"factory",A);var J=R;export{J as default,A as factory};
//# sourceMappingURL=index.mjs.map
