// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-chisquare@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";var f=u.isPrimitive,g=p;var h=function(e,t){return f(e)?f(t)?null:new TypeError(g("invalid argument. `%s` must be a positive number. Value: `%s`.","d2",t)):new TypeError(g("invalid argument. `%s` must be a positive number. Value: `%s`.","d1",e))};var j=function(e,t,n){return e(t)/t/(e(n)/n)},c=e,b=t,v=n,y=s,x=r,w=i,L=o,N=d,E=m.factory,O=a,T=l,P=p,V=h,G=j;var R=function(){var e,t,n,s,r,i,o;if(0===arguments.length)e=E();else if(1===arguments.length){if(!y(t=arguments[0]))throw new TypeError(P("invalid argument. Options argument must be an object. Value: `%s`.",t));if(w(t,"prng")){if(!x(t.prng))throw new TypeError(P("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=E({prng:t.prng})}else e=E(t)}else{if(r=V(i=arguments[0],o=arguments[1]))throw r;if(arguments.length>2){if(!y(t=arguments[2]))throw new TypeError(P("invalid argument. Options argument must be an object. Value: `%s`.",t));if(w(t,"prng")){if(!x(t.prng))throw new TypeError(P("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=E({prng:t.prng})}else e=E(t)}else e=E()}return s=void 0===i?h:g,n=e.PRNG,c(s,"NAME","f"),t&&t.prng?(c(s,"seed",null),c(s,"seedLength",null),v(s,"state",L(null),N),c(s,"stateLength",null),c(s,"byteLength",null),c(s,"toJSON",L(null))):(b(s,"seed",d),b(s,"seedLength",m),v(s,"state",p,u),b(s,"stateLength",a),b(s,"byteLength",l),c(s,"toJSON",f)),c(s,"PRNG",n),s;function d(){return n.seed}function m(){return n.seedLength}function a(){return n.stateLength}function l(){return n.byteLength}function p(){return n.state}function u(e){n.state=e}function f(){var e={type:"PRNG"};return e.name=s.NAME,e.state=T(n.state),e.params=void 0===i?[]:[i,o],e}function g(){return G(e,i,o)}function h(t,n){return O(t)||O(n)||t<=0||n<=0?NaN:G(e,t,n)}},A=R(),J=R;e(A,"factory",J);var M=A;export{M as default,J as factory};
//# sourceMappingURL=index.mjs.map
