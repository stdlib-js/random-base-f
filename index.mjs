// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-chisquare@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";var p=u.isPrimitive;var f=function(e,t){return p(e)?p(t)?null:new TypeError("invalid argument. `d2` must be a positive number. Value: `"+t+"`."):new TypeError("invalid argument. `d1` must be a positive number. Value: `"+e+"`.")};var g=function(e,t,n){return e(t)/t/(e(n)/n)},h=e,j=t,c=n,b=r,v=s,y=i,w=o,x=d,L=m.factory,N=a,E=l,O=f,T=g;var P=function(){var e,t,n,r,s,i,o;if(0===arguments.length)e=L();else if(1===arguments.length){if(!b(t=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+t+"`.");if(y(t,"prng")){if(!v(t.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+t.prng+"`.");e=L({prng:t.prng})}else e=L(t)}else{if(s=O(i=arguments[0],o=arguments[1]))throw s;if(arguments.length>2){if(!b(t=arguments[2]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+t+"`.");if(y(t,"prng")){if(!v(t.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+t.prng+"`.");e=L({prng:t.prng})}else e=L(t)}else e=L()}return r=void 0===i?P:g,n=e.PRNG,h(r,"NAME","f"),t&&t.prng?(h(r,"seed",null),h(r,"seedLength",null),c(r,"state",w(null),x),h(r,"stateLength",null),h(r,"byteLength",null),h(r,"toJSON",w(null))):(j(r,"seed",d),j(r,"seedLength",m),c(r,"state",u,p),j(r,"stateLength",a),j(r,"byteLength",l),h(r,"toJSON",f)),h(r,"PRNG",n),r;function d(){return n.seed}function m(){return n.seedLength}function a(){return n.stateLength}function l(){return n.byteLength}function u(){return n.state}function p(e){n.state=e}function f(){var e={type:"PRNG"};return e.name=r.NAME,e.state=E(n.state),e.params=void 0===i?[]:[i,o],e}function g(){return T(e,i,o)}function P(t,n){return N(t)||N(n)||t<=0||n<=0?NaN:T(e,t,n)}},V=P(),G=P;e(V,"factory",G);var R=V;export{R as default,G as factory};
//# sourceMappingURL=index.mjs.map
